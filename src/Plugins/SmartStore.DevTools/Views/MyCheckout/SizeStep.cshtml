@model ProductDetailsModel
@using SmartStore.Web.Models.Checkout;


@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web.Framework.UI;
@using SmartStore.Web;
@{
    Layout = "_Checkout";

    Html.AddTitleParts(Model.MetaTitle.Value.NullEmpty() ?? Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription.Value);
    Html.AddMetaKeywordParts(Model.MetaKeywords.Value);

    var canonicalUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Request.Url.Scheme);
    if (Model.CanonicalUrlsEnabled)
    {
        Html.AddCanonicalUrlParts(canonicalUrl);
    }
    int cursor = 0;

    string updateUrl = Url.Action("UpdateProductDetails", "MyCheckout", new
    {
        productId = Model.Id,
        bundleItemId = Model.BundleItem.Id,
        itemType = (string)null // TODO: (mc) WTF!?
    });


    // updateUrl = "/MyCheckout/UpdateProductDetails?productId=60&bundleItemId=0";
    updateUrl = "/MyCheckout/UpdateProductDetails?productId=1&bundleItemId=0";

    var shortDescription = Model.ShortDescription.Value.HasValue() ? Model.ShortDescription : Model.MetaDescription;

    // FB OpenGraph og:*
    Html.AddCustomHeadParts("<meta property='og:site_name' content='{0}' />".FormatInvariant(CommonServices.StoreContext.CurrentStore.Name));
    Html.AddCustomHeadParts("<meta property='og:type' content='{0}' />".FormatInvariant(Model.ProductType == ProductType.SimpleProduct ? "product" : "product.group"));
    Html.AddCustomHeadParts("<meta property='og:url' content='{0}' />".FormatInvariant(canonicalUrl));
    Html.AddCustomHeadParts("<meta property='og:site' content='{0}' />".FormatInvariant(Url.RouteUrl("HomePage", null, this.Request.Url.Scheme)));
    Html.AddCustomHeadParts("<meta property='og:title' content='{0}' />".FormatInvariant(Model.Name.Value));
    if (shortDescription.Value.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='og:description' content='{0}' />".FormatInvariant(shortDescription.Value));
    }

    // Twitter card
    Html.AddCustomHeadParts("<meta property='twitter:card' content='product' />");
    Html.AddCustomHeadParts("<meta property='twitter:title' content='{0}' />".FormatInvariant(Model.Name));
    if (shortDescription.Value.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='twitter:description' content='{0}' />".FormatInvariant(shortDescription.Value));
    }

    /* TODO: (mc)
     * - Badges
     * - GTIN: user must specifiy the GTIN type on product level (gtin12, gtin13 etc.). See https://schema.org/Offer
     * - FIXME (mg) > no (discount) badges shown in products lists (with bundled products & PricePerBundleItems ON)
     */
}

@section orderProgress{
    @{ Html.RenderAction("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Size, area = "" }); }
}

<div class="page product-details-page">
    @{ Html.RenderWidget("productdetails_top"); }

    @for (int i = 0; i < ViewBag.countfilters; i++)
    {
        cursor = i + 1;
        Model.AttributeInfo = i.ToString();

        <article class="pd page-body" itemscope itemtype="http://schema.org/Product">
            <div id="main-update-container" class="update-container" data-url="@updateUrl">
                @using (Html.BeginRouteForm("Product", new { SeName = Model.SeName }, FormMethod.Post, new { id = "pd-form-" + Model.AttributeInfo }))
                {
                    <!-- Top Content: Picture, Description, Attrs, Variants, Bundle Items, Price etc. -->
                    <section class="row pd-section pd-section-top">
                        <!-- Picture -->
                        <div class="col-12 col-md-6 col-lg-7 pd-data-col" style="display:none">
                            @{ Html.RenderWidget("productdetails_pictures_top"); }

                            <div id="pd-gallery-container" style="display:none">
                                @{ Html.RenderPartial("Product.Picture", Model.DetailsPictureModel); }
                            </div>

                            @{ Html.RenderWidget("productdetails_pictures_bottom"); }
                        </div>


                        <!-- Sidebar: Info, Price, Buttons etc. -->
                        <aside class="col-12 col-md-12 col-lg-12 pd-info-col zoom-window-container">

                            @{ Html.RenderWidget("productdetails_info_top"); }
                            <!-- Title/Brand/ReviewSummary -->
                            <span class="font-weight-bold">Filter # @cursor</span>

                            @if (Model.ProductType != ProductType.GroupedProduct)
                            {
                                Html.RenderWidget("productdetails_attrs_top");

                                <!-- Offer box -->
                                Html.RenderPartial("Product.Offer", Model);
                            }

                            @{ Html.RenderWidget("productdetails_info_bottom"); }
                        </aside>

                    </section>

                }
            </div>
        </article>

    }



    <div class="page-body checkout-data text-center">

        @using (Html.BeginForm())
        {
            <div class="buttons">
                <div class="back-button">
                    <a href="@Url.RouteUrl("QuantityStep",  new { productId = Model.Id, quantity = ViewBag.countfilters })">
                        <i class="fa fa-angle-left"></i>
                        <span>@T("Common.Back")</span>
                    </a>
                </div>
                <input type="submit" id="nextstep" name="nextstep" class="d-none" />
                <a class="btn submit-btn btn-lg new-address-next-step-button" href="@Url.RouteUrl("ScheduleStep",  new { quantity = ViewBag.countfilters })">
                    <span>@T("Checkout.NextButton")</span>
                    <i class="fa fa-angle-right"></i>
                </a>
            </div>

        }

    </div>
</div>
<script>
    $(function () {
        var settings = {
            galleryStartIndex: @(Model.DetailsPictureModel.GalleryStartIndex),
            enableZoom: toBool('@(Model.DetailsPictureModel.DefaultPictureZoomEnabled)')
        };

    	//$('#pd-form1').productDetail(settings);
    });
</script>
