@model ProductDetailsModel
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Web;
<div class="pd-offer" @(!Model.ProductPrice.CallForPrice ? "itemprop=\"offers\" itemscope itemtype=\"http://schema.org/Offer\"" : "")>
    <meta itemprop="itemCondition" content="http://schema.org/NewCondition" />
    @if (!Model.AddToCart.DisableBuyButton || !Model.AddToCart.DisableWishlistButton || Model.ProductPrice.ShowLoginNote)
    {
        if (Model.AddToCart.CustomerEntersPrice && !Model.ProductPrice.HidePrices)
        {
            var dataDictCustomerPrice = new ViewDataDictionary();
            dataDictCustomerPrice.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
            Html.RenderPartial("Product.CustomerPrice", Model, dataDictCustomerPrice);
        }
        else
        {
            <div class="pd-offer-price-container" data-partial="Price">
                @{ Html.RenderPartial("Product.Offer.Price", Model); }
            </div>
        }
    }
    <div class="pd-stock-info-container" data-partial="Stock">
        @{ Html.RenderPartial("Product.StockInfo", Model); }
    </div>

    <div class="row">
        <div class="col-12 col-sm-9 col-md-9 col-lg-9">
            @if (Model.ProductType != ProductType.BundledProduct && Model.ProductVariantAttributes.ShouldBeRendered())
            {
                var dataDictVariants = new ViewDataDictionary();
                dataDictVariants.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);

                Html.RenderPartial("Product.Variants", Model.ProductVariantAttributes, dataDictVariants);
            }
        </div>

       <div class="col-12 col-sm-3 col-md-3 col-lg-3">
            <div data-partial="OfferActions" class="margin-top-xs">
                @{
                    var dataDictAddToCart = new ViewDataDictionary();
                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                    Html.RenderPartial("Product.Offer.Actions", Model, dataDictAddToCart);
                }
            </div>
        </div>
    </div>

    @{ Html.RenderPartial("Product.Offer.Actions.Misc", Model); }
</div>